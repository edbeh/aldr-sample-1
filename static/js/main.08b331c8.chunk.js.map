{"version":3,"sources":["components/StoreInfo.js","components/Card.js","components/Loading.js","components/ScrollUp.js","index.js","configuration.js"],"names":["StoreInfo","result","className","src","merchant","logo","alt","title","location","Card","photo","Loading","ScrollUp","behavior","buttonBackgroundColor","iconType","style","fontSize","targetId","App","useState","loading","setLoading","results","setResults","next","setNext","trigger","setTrigger","React","useEffect","endpoint","fetch","then","res","json","concat","catch","err","console","log","map","key","slug","onClick","ReactDOM","render","document","querySelector"],"mappings":"6NAeeA,EAbG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,aAAaC,IAAKF,EAAOG,SAASC,KAAMC,IAAI,SAC3D,6BACE,0BAAMJ,UAAU,cAAcD,EAAOM,OACrC,6BACA,0BAAML,UAAU,kBAAkBD,EAAOO,aCGlCC,EATF,SAAC,GAAgB,IAAdR,EAAa,EAAbA,OACd,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cAAcC,IAAKF,EAAOS,MAAOJ,IAAI,eACpD,kBAAC,EAAD,CAAWL,OAAQA,MCDVU,EAJC,WACd,OAAO,yBAAKT,UAAU,a,iBCYTU,EAZE,WACf,OACE,kBAAC,IAAD,CACEC,SAAU,SACVC,sBAAuB,QACvBC,SAAU,WACVC,MAAO,CAAEC,SAAU,QACnBC,SAAU,UCDVC,G,MAAM,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACTC,EADS,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGQJ,mBAAS,eAHjB,mBAGTK,EAHS,KAGHC,EAHG,OAIcN,oBAAS,GAJvB,mBAITO,EAJS,KAIAC,EAJA,KAqBhB,OAdAC,IAAMC,WAAU,WACd,IAAIC,EAAQ,UCjBO,0DDiBP,OAAgBN,GAC5BH,GAAW,GACXU,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLT,EAAQS,EAAKV,MACbD,GAAW,SAACD,GAAD,OAAaA,EAAQa,OAAOD,EAAKZ,YAC5CD,GAAW,MAEZe,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAE7B,CAACX,IAGF,6BACE,kBAAC,EAAD,MAEA,yBAAKzB,UAAU,aACZqB,EAAQkB,KAAI,SAACxC,GAAD,OACX,kBAAC,EAAD,CAAMyC,IAAKzC,EAAO0C,KAAM1C,OAAQA,QAIpC,yBAAKC,UAAU,YACZmB,GAAW,kBAAC,EAAD,OAEVA,GAAWI,EACX,4BACEvB,UAAU,gBACV0C,QAAS,kBAAMhB,GAAW,SAACD,GAAD,OAAcA,OAF1C,aAME,SAMZkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.08b331c8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst StoreInfo = ({ result }) => {\r\n  return (\r\n    <div className='store-info'>\r\n      <img className='store-logo' src={result.merchant.logo} alt='logo' />\r\n      <div>\r\n        <span className='store-name'>{result.title}</span>\r\n        <br />\r\n        <span className='store-location'>{result.location}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreInfo;\r\n","import React from 'react';\r\nimport StoreInfo from './StoreInfo';\r\n\r\nconst Card = ({ result }) => {\r\n  return (\r\n    <div className='card'>\r\n      <img className='store-image' src={result.photo} alt='storefront' />\r\n      <StoreInfo result={result} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return <div className='loading'></div>;\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport ScrollButton from 'react-scroll-button';\r\n\r\nconst ScrollUp = () => {\r\n  return (\r\n    <ScrollButton\r\n      behavior={'smooth'}\r\n      buttonBackgroundColor={'black'}\r\n      iconType={'arrow-up'}\r\n      style={{ fontSize: '24px' }}\r\n      targetId={'root'}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ScrollUp;\r\n","import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Card from './components/Card';\r\nimport Loading from './components/Loading';\r\nimport ScrollUp from './components/ScrollUp';\r\n\r\nimport './index.css';\r\nimport { API_URL } from './configuration';\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n  const [next, setNext] = useState('page_1.json');\r\n  const [trigger, setTrigger] = useState(false);\r\n\r\n  // fetch results from json\r\n  React.useEffect(() => {\r\n    let endpoint = `${API_URL}${next}`;\r\n    setLoading(true);\r\n    fetch(endpoint)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setNext(json.next);\r\n        setResults((results) => results.concat(json.results));\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    // eslint-disable-next-line\r\n  }, [trigger]);\r\n\r\n  return (\r\n    <div>\r\n      <ScrollUp />\r\n\r\n      <div className='container'>\r\n        {results.map((result) => (\r\n          <Card key={result.slug} result={result} />\r\n        ))}\r\n      </div>\r\n\r\n      <div className='controls'>\r\n        {loading && <Loading />}\r\n        {/* Display view more button only if app is not loading, and next page is available */}\r\n        {!loading && next ? (\r\n          <button\r\n            className='view-more-btn'\r\n            onClick={() => setTrigger((trigger) => !trigger)}\r\n          >\r\n            View More\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n","export const API_URL = 'https://aldr-endpoint.s3-ap-southeast-1.amazonaws.com/';\r\n"],"sourceRoot":""}